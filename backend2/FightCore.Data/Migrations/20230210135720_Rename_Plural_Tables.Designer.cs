// <auto-generated />
using System;
using FightCore.FrameData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FightCore.FrameData.Migrations
{
    [DbContext(typeof(FrameDataContext))]
    [Migration("20230210135720_Rename_Plural_Tables")]
    partial class Rename_Plural_Tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FightCore.Models.Character", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("CharacterInfoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CharacterStatisticsId")
                        .HasColumnType("bigint");

                    b.Property<long>("FightCoreId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInfoId");

                    b.HasIndex("CharacterStatisticsId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("FightCore.Models.CharacterMiscInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Discord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeleeFrameData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SsbWiki")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CharactersMiscInfos");
                });

            modelBuilder.Entity("FightCore.Models.CharacterStatistics", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("CanWallJump")
                        .HasColumnType("bit");

                    b.Property<int>("DashFrames")
                        .HasColumnType("int");

                    b.Property<double>("Gravity")
                        .HasColumnType("float");

                    b.Property<double>("InitialDash")
                        .HasColumnType("float");

                    b.Property<int>("JumpSquat")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PLAIntangibilityFrames")
                        .HasColumnType("int");

                    b.Property<double>("RunSpeed")
                        .HasColumnType("float");

                    b.Property<double>("WalkSpeed")
                        .HasColumnType("float");

                    b.Property<double>("WaveDashLength")
                        .HasColumnType("float");

                    b.Property<int>("WaveDashLengthRank")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CharacterStatistics");
                });

            modelBuilder.Entity("FightCore.Models.Hitbox", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("Angle")
                        .HasColumnType("bigint");

                    b.Property<long>("BaseKnockback")
                        .HasColumnType("bigint");

                    b.Property<long>("Damage")
                        .HasColumnType("bigint");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HitlagAttacker")
                        .HasColumnType("int");

                    b.Property<int>("HitlagAttackerCrouched")
                        .HasColumnType("int");

                    b.Property<int>("HitlagDefender")
                        .HasColumnType("int");

                    b.Property<int>("HitlagDefenderCrouched")
                        .HasColumnType("int");

                    b.Property<long>("KnockbackGrowth")
                        .HasColumnType("bigint");

                    b.Property<long>("MoveId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SetKnockback")
                        .HasColumnType("bigint");

                    b.Property<int>("Shieldstun")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MoveId");

                    b.ToTable("Hitboxes");
                });

            modelBuilder.Entity("FightCore.Models.Move", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("AutoCancelAfter")
                        .HasColumnType("int");

                    b.Property<int?>("AutoCancelBefore")
                        .HasColumnType("int");

                    b.Property<long>("CharacterId")
                        .HasColumnType("bigint");

                    b.Property<int?>("End")
                        .HasColumnType("int");

                    b.Property<int?>("IASA")
                        .HasColumnType("int");

                    b.Property<int?>("LCanceledLandLag")
                        .HasColumnType("int");

                    b.Property<int?>("LandLag")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Percent")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Start")
                        .HasColumnType("int");

                    b.Property<int>("TotalFrames")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("FightCore.Models.Character", b =>
                {
                    b.HasOne("FightCore.Models.CharacterMiscInfo", "CharacterInfo")
                        .WithMany()
                        .HasForeignKey("CharacterInfoId");

                    b.HasOne("FightCore.Models.CharacterStatistics", "CharacterStatistics")
                        .WithMany()
                        .HasForeignKey("CharacterStatisticsId");

                    b.Navigation("CharacterInfo");

                    b.Navigation("CharacterStatistics");
                });

            modelBuilder.Entity("FightCore.Models.Hitbox", b =>
                {
                    b.HasOne("FightCore.Models.Move", "Move")
                        .WithMany("Hitboxes")
                        .HasForeignKey("MoveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Move");
                });

            modelBuilder.Entity("FightCore.Models.Move", b =>
                {
                    b.HasOne("FightCore.Models.Character", "Character")
                        .WithMany("Moves")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("FightCore.Models.Character", b =>
                {
                    b.Navigation("Moves");
                });

            modelBuilder.Entity("FightCore.Models.Move", b =>
                {
                    b.Navigation("Hitboxes");
                });
#pragma warning restore 612, 618
        }
    }
}
