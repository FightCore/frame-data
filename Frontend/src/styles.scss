// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@use 'fightcore-pelette.scss' as fc;
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$FightCore-primary: mat.define-palette(fc.$md-fightcore-red);
$FightCore-accent: mat.define-palette(fc.$md-fightcore-green);

// The warn palette is optional (defaults to red).
$FightCore-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$FightCore-light-theme: mat.define-light-theme(
  (
    color: (
      primary: $FightCore-primary,
      accent: $FightCore-accent,
      warn: $FightCore-warn,
    ),
    typography: mat.define-typography-config(),
  )
);

$FightCore-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $FightCore-primary,
      accent: $FightCore-accent,
      warn: $FightCore-warn,
    ),
    typography: mat.define-typography-config(),
  )
);

@mixin background-theme($theme) {
  // Extract the palettes you need from the theme definition.
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);

  .background-color-primary {
    background-color: mat.get-color-from-palette($primary);
  }

  .background-color-accent {
    background-color: mat.get-color-from-palette($accent);
  }
  .color-primary {
    color: mat.get-color-from-palette($primary);
  }

  .color-accent {
    color: mat.get-color-from-palette($accent);
  }
}

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($FightCore-light-theme);
@include background-theme($FightCore-light-theme);

.dark-theme {
  @include mat.all-component-colors($FightCore-dark-theme);
  @include background-theme($FightCore-dark-theme);
}

@tailwind base;
@tailwind components;
@tailwind utilities;

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
  background-color: #eeeeee;
  height: 100%;
}
body.dark-theme {
  background-color: #303030;
}
